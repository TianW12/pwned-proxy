services:
  pwned-proxy-app-main:
    image: dtuait/pwned-proxy-app-main:python-3.13-bullseye-django-5.1.6-myversion-1.0.2
    # build:
    #   context: .          # Adjust if your Dockerfile is in a subfolder
    #   dockerfile: Dockerfile
    container_name: pwned-proxy-app-main
    user: "${CURRENT_UID:-1000}:${CURRENT_GID:-1000}"
    # expose:
    #   - "8000"
    volumes:
      - ..:/usr/src/project   # Mount your source code inside the container
      - static-data:/usr/src/project/staticfiles
    environment:
      # If you prefer to set these in a .env, remove the defaults below and just keep:
      # POSTGRES_USER: ${POSTGRES_USER}
      # etc.
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"

      GIT_USER_NAME: "${GIT_USER_NAME}"
      GIT_USER_EMAIL: "${GIT_USER_EMAIL}"

      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pwned-proxy-db:5432/${POSTGRES_DB}"

    depends_on:
      - pwned-proxy-db

    command: sleep infinity
    # Uncomment and adjust if you want Django to run migrations and collect static on container startup.
    # command: >
    #   sh -c "
    #     /usr/src/venvs/app-main/bin/python manage.py migrate &&
    #     /usr/src/venvs/app-main/bin/python manage.py collectstatic --noinput &&
    #     /usr/src/venvs/app-main/bin/gunicorn pwned_proxy.wsgi:application --bind 0.0.0.0:8000
    #   "

  pwned-proxy-nginx:
    image: nginx:stable-alpine
    container_name: pwned-proxy-nginx
    depends_on:
      - pwned-proxy-app-main
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static-data:/usr/src/project/staticfiles

  pwned-proxy-db:
    image: postgres:16-alpine
    container_name: pwned-proxy-db
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

# Removed the pgadmin service

volumes:
  postgres-data:
  static-data:
