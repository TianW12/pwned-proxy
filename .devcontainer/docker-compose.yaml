version: "3.9"

services:
  pwnedproxy_app:
    build:
      context: .                 # Coolify clones repo â†’ builds inside it
      dockerfile: Dockerfile.prod
    image: pwnedproxy_app:latest # local tag; Coolify pushes to its registry
    env_file: .env
    restart: unless-stopped

    expose: ["8000"]
    depends_on: [db]

    labels:
      - traefik.enable=true
      - traefik.http.routers.pwnedproxy.rule=Host(`api.haveibeenpwned.security.ait.dtu.dk`)
      - traefik.http.routers.pwnedproxy.entryPoints=websecure
      - traefik.http.routers.pwnedproxy.tls=true
      - traefik.http.routers.pwnedproxy.tls.certresolver=letsencrypt
      - traefik.http.services.pwnedproxy.loadbalancer.server.port=8000
      - traefik.http.routers.pwnedproxy-insecure.rule=Host(`api.haveibeenpwned.security.ait.dtu.dk`)
      - traefik.http.routers.pwnedproxy-insecure.entryPoints=web
      - traefik.http.routers.pwnedproxy-insecure.middlewares=pwnedproxy-https-redirect
      - traefik.http.middlewares.pwnedproxy-https-redirect.redirectscheme.scheme=https

  db:
    image: postgres:14-alpine
    env_file: .env
    restart: unless-stopped
    environment:
      POSTGRES_DB:       ${POSTGRES_DB}
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
